name: Deno Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: deno task lint

      - name: Test
        run: deno task test

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: deno task release

      - name: Build
        run: deno task build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [release]
    if: always() && (needs.release.result == 'success' || github.event_name == 'pull_request')

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Verify built files
        run: ls -R dist

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: 'exavatar'
          entrypoint: 'server/entry.mjs'
          root: 'dist'
